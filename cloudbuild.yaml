steps:
  - name: gcr.io/cloud-builders/gcloud
    args:
      - source
      - repos
      - clone
      - github_mirror-media_kubernetes-configs
      - ./dockerignore/kubernetes-configs
  - name: bash
    args:
      - cp
      - >-
        ./dockerignore/kubernetes-configs/readr-nuxt/overlays/${BRANCH_NAME}/configs/config.js
      - ./configs/config.js

  - name: bash
    args:
      - rm
      - "-R"
      - ./configs.build
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - "docker pull gcr.io/${PROJECT_ID}/readr-nuxt:${BRANCH_NAME} || exit 0"
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "-t"
      - "gcr.io/${PROJECT_ID}/readr-nuxt:${BRANCH_NAME}"
      - "-t"
      - "gcr.io/$PROJECT_ID/readr-nuxt:${BRANCH_NAME}_${COMMIT_SHA}
      - "--cache-from"
      - "gcr.io/$PROJECT_ID/readr-nuxt:${BRANCH_NAME}"
      - "--build-arg"
      - "ENV=${BRANCH_NAME}"
      - .
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/readr-nuxt:${BRANCH_NAME}
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/readr-nuxt:${BRANCH_NAME}_${COMMIT_SHA}

  # Deploy container image to Cloud Runs
  - name: gcr.io/cloud-builders/gcloud
    id: Deploy Image
    entrypoint: 'bash'
    args:
      - '-c'
      - |

        # read cloud run service names from substitution variable
        IFS=',' read -r -a cloud_runs <<< "$_CLOUD_RUN_SERVICE_NAMES"

        for cr in "${cloud_runs[@]}"
        do

        # deploy cloud run service iteratively
        gcloud run deploy "$cr" --image gcr.io/$PROJECT_ID/$_IMAGE_NAME:${BRANCH_NAME}_${COMMIT_SHA} --region asia-east1

        done

timeout: 1200s
images:
  - gcr.io/$PROJECT_ID/readr-nuxt
substitutions:
  _TARGET_PACKAGE: '' # default value
  _IMAGE_NAME: '' # default value
  _CLOUD_RUN_SERVICE_NAMES: '' # default value
  _ENV: 'prod' # default value
